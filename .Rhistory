# Summarizing with specified .names
summary_data_named <- data %>%
group_by(group) %>%
summarise(
across(c(value1, value2), list(mean = ~mean(.x, na.rm = TRUE), sd = ~sd(.x, na.rm = TRUE)), .names = "{col}_{fn}")
)
print(summary_data_named)
# Summarizing with specified .names
summary_data_named <- data %>%
group_by(group) %>%
summarise(
across(c(value1, value2), list(mean = ~mean(.x, na.rm = TRUE), sd = ~sd(.x, na.rm = TRUE), median = ~median(.x, na.rm = TRUE)), .names = "{col}_{fn}")
)
print(summary_data_named)
library(tidyverse)
compute_summary_stats <- function(data, variables, group_var = NULL) {
# Summarize data with or without grouping
if (!is.null(group_var)) {
summary_data <- data %>%
group_by(across(all_of(group_var))) %>%
summarise(
n = n(),
across(all_of(variables), list(
mean = ~mean(.x, na.rm = TRUE),
sd = ~sd(.x, na.rm = TRUE),
min = ~min(.x, na.rm = TRUE),
max = ~max(.x, na.rm = TRUE),
range = ~max(.x, na.rm = TRUE) - min(.x, na.rm = TRUE),
se = ~sd(.x, na.rm = TRUE) / sqrt(n())
), .names = "{col}_{fn}")
) %>%
mutate(across(where(is.numeric), \(x) round(x, 2)))
} else {
summary_data <- data %>%
summarise(
n = n(),
across(all_of(variables), list(
mean = ~mean(.x, na.rm = TRUE),
sd = ~sd(.x, na.rm = TRUE),
min = ~min(.x, na.rm = TRUE),
max = ~max(.x, na.rm = TRUE),
range = ~max(.x, na.rm = TRUE) - min(.x, na.rm = TRUE),
se = ~sd(.x, na.rm = TRUE) / sqrt(n())
), .names = "{col}_{fn}")
) %>%
mutate(across(where(is.numeric), \(x) round(x, 2)))
}
# Pivot longer to have statistics as one column
df_long <- summary_data %>%
pivot_longer(
cols = matches(paste(variables, collapse = "|")),
names_to = c("Variable", "Statistic"),
names_sep = "_",
values_to = "Value"
)
# Pivot wider to have statistics as columns and variables as rows
if (!is.null(group_var)) {
df_wide <- df_long %>%
pivot_wider(
names_from = "Statistic",
values_from = "Value"
) %>%
arrange(Variable, across(all_of(group_var))) %>%
relocate(Variable, .before = all_of(group_var))
} else {
df_wide <- df_long %>%
pivot_wider(
names_from = "Statistic",
values_from = "Value"
) %>%
arrange(Variable) %>%
relocate(Variable)
}
return(df_wide)
}
# Example usage
data <- tibble(
PATSEX = rep(c("F", "M"), each = 10),
PATAGE = rnorm(20, mean = 50, sd = 10),
taille = rnorm(20, mean = 170, sd = 5)
)
# With grouping variable
result_with_group <- compute_summary_stats(data, variables = c("PATAGE", "taille"), group_var = "PATSEX")
print(result_with_group)
# Without grouping variable
result_without_group <- compute_summary_stats(data, variables = c("PATAGE", "taille"))
print(result_without_group)
library(tidyverse)
compute_summary_stats <- function(data, variables, group_var = NULL) {
# Summarize data with or without grouping
if (!is.null(group_var)) {
summary_data <- data %>%
group_by(across(all_of(group_var))) %>%
summarise(
n = n(),
across(all_of(variables), list(
mean = ~mean(.x, na.rm = TRUE),
sd = ~sd(.x, na.rm = TRUE),
min = ~min(.x, na.rm = TRUE),
max = ~max(.x, na.rm = TRUE),
range = ~max(.x, na.rm = TRUE) - min(.x, na.rm = TRUE),
se = ~sd(.x, na.rm = TRUE) / sqrt(n())
), .names = "{col}_{fn}")
) %>%
mutate(across(where(is.numeric), \(x) round(x, 2)))
} else {
summary_data <- data %>%
summarise(
n = n(),
across(all_of(variables), list(
mean = ~mean(.x, na.rm = TRUE),
sd = ~sd(.x, na.rm = TRUE),
min = ~min(.x, na.rm = TRUE),
max = ~max(.x, na.rm = TRUE),
range = ~max(.x, na.rm = TRUE) - min(.x, na.rm = TRUE),
se = ~sd(.x, na.rm = TRUE) / sqrt(n())
))
) %>%
mutate(across(where(is.numeric), \(x) round(x, 2)))
}
# Pivot longer to have statistics as one column
df_long <- summary_data %>%
pivot_longer(
cols = matches(paste(variables, collapse = "|")),
names_to = c("Variable", "Statistic"),
names_sep = "_",
values_to = "Value"
)
# Pivot wider to have statistics as columns and variables as rows
if (!is.null(group_var)) {
df_wide <- df_long %>%
pivot_wider(
names_from = "Statistic",
values_from = "Value"
) %>%
arrange(Variable, across(all_of(group_var))) %>%
relocate(Variable, .before = all_of(group_var))
} else {
df_wide <- df_long %>%
pivot_wider(
names_from = "Statistic",
values_from = "Value"
) %>%
arrange(Variable) %>%
relocate(Variable)
}
return(df_wide)
}
# Example usage
data <- tibble(
PATSEX = rep(c("F", "M"), each = 10),
PATAGE = rnorm(20, mean = 50, sd = 10),
taille = rnorm(20, mean = 170, sd = 5)
)
# With grouping variable
result_with_group <- compute_summary_stats(data, variables = c("PATAGE", "taille"), group_var = "PATSEX")
print(result_with_group)
# Without grouping variable
result_without_group <- compute_summary_stats(data, variables = c("PATAGE", "taille"))
print(result_without_group)
library(tidyverse)
compute_summary_stats <- function(data, variables, group_var = NULL) {
# Summarize data with or without grouping
summary_data <- if (!is.null(group_var)) {
data %>%
group_by(across(all_of(group_var))) %>%
summarise(
n = n(),
across(all_of(variables), list(
mean = ~mean(.x, na.rm = TRUE),
sd = ~sd(.x, na.rm = TRUE),
min = ~min(.x, na.rm = TRUE),
max = ~max(.x, na.rm = TRUE),
range = ~max(.x, na.rm = TRUE) - min(.x, na.rm = TRUE),
se = ~sd(.x, na.rm = TRUE) / sqrt(n())
))
) %>%
mutate(across(where(is.numeric), ~round(.x, 2)))
} else {
data %>%
summarise(
n = n(),
across(all_of(variables), list(
mean = ~mean(.x, na.rm = TRUE),
sd = ~sd(.x, na.rm = TRUE),
min = ~min(.x, na.rm = TRUE),
max = ~max(.x, na.rm = TRUE),
range = ~max(.x, na.rm = TRUE) - min(.x, na.rm = TRUE),
se = ~sd(.x, na.rm = TRUE) / sqrt(n())
))
) %>%
mutate(across(where(is.numeric), ~round(.x, 2)))
}
# Pivot longer to have statistics as one column
df_long <- summary_data %>%
pivot_longer(
cols = matches(paste(variables, collapse = "|")),
names_to = c("Variable", "Statistic"),
names_sep = "_",
values_to = "Value"
)
# Pivot wider to have statistics as columns and variables as rows
if (!is.null(group_var)) {
df_wide <- df_long %>%
pivot_wider(
names_from = "Statistic",
values_from = "Value"
) %>%
arrange(Variable, across(all_of(group_var))) %>%
relocate(Variable, .before = all_of(group_var))
} else {
df_wide <- df_long %>%
pivot_wider(
names_from = "Statistic",
values_from = "Value"
) %>%
arrange(Variable) %>%
relocate(Variable)
}
return(df_wide)
}
# Example usage
data <- tibble(
PATSEX = rep(c("F", "M"), each = 10),
PATAGE = rnorm(20, mean = 50, sd = 10),
taille = rnorm(20, mean = 170, sd = 5)
)
# With grouping variable
result_with_group <- compute_summary_stats(data, variables = c("PATAGE", "taille"), group_var = "PATSEX")
print(result_with_group)
# Without grouping variable
result_without_group <- compute_summary_stats(data, variables = c("PATAGE", "taille"))
print(result_without_group)
library(DT)
datatable(result_with_group)
fdescribe = function(data, vars, group_vars = NULL) {
# Summarize data with or without grouping
summary_data <- if (!is.null(group_vars)) {
data %>%
group_by(across(all_of(group_vars))) %>%
summarise(
n = n(),
across(all_of(vars), list(
mean = ~mean(.x, na.rm = TRUE),
sd = ~sd(.x, na.rm = TRUE),
min = ~min(.x, na.rm = TRUE),
max = ~max(.x, na.rm = TRUE),
range = ~max(.x, na.rm = TRUE) - min(.x, na.rm = TRUE),
se = ~sd(.x, na.rm = TRUE) / sqrt(n())
))
) %>%
mutate(across(where(is.numeric), ~round(.x, 2)))
} else {
data %>%
summarise(
n = n(),
across(all_of(vars), list(
mean = ~mean(.x, na.rm = TRUE),
sd = ~sd(.x, na.rm = TRUE),
min = ~min(.x, na.rm = TRUE),
max = ~max(.x, na.rm = TRUE),
range = ~max(.x, na.rm = TRUE) - min(.x, na.rm = TRUE),
se = ~sd(.x, na.rm = TRUE) / sqrt(n())
))
) %>%
mutate(across(where(is.numeric), ~round(.x, 2)))
}
# Pivot longer to have statistics as one column
df_long <- summary_data %>%
pivot_longer(
cols = matches(paste(vars, collapse = "|")),
names_to = c("Variable", "Statistic"),
names_sep = "_",
values_to = "Value"
)
# Pivot wider to have statistics as columns and vars as rows
if (!is.null(group_vars)) {
df_wide <- df_long %>%
pivot_wider(
names_from = "Statistic",
values_from = "Value"
) %>%
arrange(Variable, across(all_of(group_vars))) %>%
relocate(Variable, .before = all_of(group_vars))
} else {
df_wide <- df_long %>%
pivot_wider(
names_from = "Statistic",
values_from = "Value"
) %>%
arrange(Variable)
}
return(df_wide)
}
fdescribe(data)
fdescribe(data, variables = c("PATAGE", "taille"), group_var = "PATSEX")
fdescribe(data, vars = c("PATAGE", "taille"), group_vars = "PATSEX")
fdescribe(data, vars = c("PATAGE", "taille"))
df_wide <- df_long %>%
pivot_wider(
names_from = "Statistic",
values_from = "Value"
) %>%
arrange(Variable) %>%
relocate(Variable)
df_wide <- df_long %>%
pivot_wider(
names_from = "Statistic",
values_from = "Value"
) %>%
arrange(Variable) %>%
relocate(Variable)
fdescribe = function(data, vars, group_vars = NULL) {
# Summarize data with or without grouping
summary_data <- if (!is.null(group_vars)) {
data %>%
group_by(across(all_of(group_vars))) %>%
summarise(
n = n(),
across(all_of(vars), list(
mean = ~mean(.x, na.rm = TRUE),
sd = ~sd(.x, na.rm = TRUE),
min = ~min(.x, na.rm = TRUE),
max = ~max(.x, na.rm = TRUE),
range = ~max(.x, na.rm = TRUE) - min(.x, na.rm = TRUE),
se = ~sd(.x, na.rm = TRUE) / sqrt(n())
))
) %>%
mutate(across(where(is.numeric), ~round(.x, 2)))
} else {
data %>%
summarise(
n = n(),
across(all_of(vars), list(
mean = ~mean(.x, na.rm = TRUE),
sd = ~sd(.x, na.rm = TRUE),
min = ~min(.x, na.rm = TRUE),
max = ~max(.x, na.rm = TRUE),
range = ~max(.x, na.rm = TRUE) - min(.x, na.rm = TRUE),
se = ~sd(.x, na.rm = TRUE) / sqrt(n())
))
) %>%
mutate(across(where(is.numeric), ~round(.x, 2)))
}
# Pivot longer to have statistics as one column
df_long <- summary_data %>%
pivot_longer(
cols = matches(paste(vars, collapse = "|")),
names_to = c("Variable", "Statistic"),
names_sep = "_",
values_to = "Value"
)
# Pivot wider to have statistics as columns and vars as rows
if (!is.null(group_vars)) {
df_wide <- df_long %>%
pivot_wider(
names_from = "Statistic",
values_from = "Value"
) %>%
arrange(Variable, across(all_of(group_vars))) %>%
relocate(Variable, .before = all_of(group_vars))
} else {
df_wide <- df_long %>%
pivot_wider(
names_from = "Statistic",
values_from = "Value"
) %>%
arrange(Variable) %>%
relocate(Variable)
}
return(df_wide)
}
fdescribe(data, vars = c("PATAGE", "taille"))
fdescribe(data, vars = c("PATAGE", "taille"), group_vars = "PATSEX")
library(stringr)
names(df_wide) = str_to_title(names(df_wide))
fdescribe = function(data, vars, group_vars = NULL) {
# Summarize data with or without grouping
summary_data <- if (!is.null(group_vars)) {
data %>%
group_by(across(all_of(group_vars))) %>%
summarise(
n = n(),
across(all_of(vars), list(
mean = ~mean(.x, na.rm = TRUE),
sd = ~sd(.x, na.rm = TRUE),
min = ~min(.x, na.rm = TRUE),
max = ~max(.x, na.rm = TRUE),
range = ~max(.x, na.rm = TRUE) - min(.x, na.rm = TRUE),
se = ~sd(.x, na.rm = TRUE) / sqrt(n())
))
) %>%
mutate(across(where(is.numeric), ~round(.x, 2)))
} else {
data %>%
summarise(
n = n(),
across(all_of(vars), list(
mean = ~mean(.x, na.rm = TRUE),
sd = ~sd(.x, na.rm = TRUE),
min = ~min(.x, na.rm = TRUE),
max = ~max(.x, na.rm = TRUE),
range = ~max(.x, na.rm = TRUE) - min(.x, na.rm = TRUE),
se = ~sd(.x, na.rm = TRUE) / sqrt(n())
))
) %>%
mutate(across(where(is.numeric), ~round(.x, 2)))
}
# Pivot longer to have statistics as one column
df_long <- summary_data %>%
pivot_longer(
cols = matches(paste(vars, collapse = "|")),
names_to = c("Variable", "Statistic"),
names_sep = "_",
values_to = "Value"
)
# Pivot wider to have statistics as columns and vars as rows
if (!is.null(group_vars)) {
df_wide <- df_long %>%
pivot_wider(
names_from = "Statistic",
values_from = "Value"
) %>%
arrange(Variable, across(all_of(group_vars))) %>%
relocate(Variable, .before = all_of(group_vars))
names(df_wide) = str_to_title(names(df_wide))
} else {
df_wide <- df_long %>%
pivot_wider(
names_from = "Statistic",
values_from = "Value"
) %>%
arrange(Variable) %>%
relocate(Variable)
names(df_wide) = str_to_title(names(df_wide))
}
return(df_wide)
}
names(df_wide) = str_to_title(names(df_wide))
fdescribe(data, vars = c("PATAGE", "taille"), group_vars = "PATSEX")
fdescribe = function(data, vars, group_vars = NULL) {
# Summarize data with or without grouping
summary_data <- if (!is.null(group_vars)) {
data %>%
group_by(across(all_of(group_vars))) %>%
summarise(
n = n(),
across(all_of(vars), list(
mean = ~mean(.x, na.rm = TRUE),
sd = ~sd(.x, na.rm = TRUE),
min = ~min(.x, na.rm = TRUE),
max = ~max(.x, na.rm = TRUE),
range = ~max(.x, na.rm = TRUE) - min(.x, na.rm = TRUE),
se = ~sd(.x, na.rm = TRUE) / sqrt(n())
))
) %>%
mutate(across(where(is.numeric), ~round(.x, 2)))
} else {
data %>%
summarise(
n = n(),
across(all_of(vars), list(
mean = ~mean(.x, na.rm = TRUE),
sd = ~sd(.x, na.rm = TRUE),
min = ~min(.x, na.rm = TRUE),
max = ~max(.x, na.rm = TRUE),
range = ~max(.x, na.rm = TRUE) - min(.x, na.rm = TRUE),
se = ~sd(.x, na.rm = TRUE) / sqrt(n())
))
) %>%
mutate(across(where(is.numeric), ~round(.x, 2)))
}
# Pivot longer to have statistics as one column
df_long <- summary_data %>%
pivot_longer(
cols = matches(paste(vars, collapse = "|")),
names_to = c("Variable", "Statistic"),
names_sep = "_",
values_to = "Value"
)
# Pivot wider to have statistics as columns and vars as rows
if (!is.null(group_vars)) {
df_wide <- df_long %>%
pivot_wider(
names_from = "Statistic",
values_from = "Value"
) %>%
arrange(Variable, across(all_of(group_vars))) %>%
relocate(Variable, .before = all_of(group_vars)) %>%
mutate(Variable = str_to_title(Variable))
names(df_wide) = str_to_title(names(df_wide))
} else {
df_wide <- df_long %>%
pivot_wider(
names_from = "Statistic",
values_from = "Value"
) %>%
arrange(Variable) %>%
relocate(Variable) %>%
mutate(Variable = str_to_title(Variable))
names(df_wide) = str_to_title(names(df_wide))
}
return(df_wide)
}
fdescribe(data, vars = c("PATAGE", "taille"), group_vars = "PATSEX")
library(fmckage)
fdescribe()
fdescribe
library(fmckage)
devtools::document()
?fdescribe
library(fmckage)
